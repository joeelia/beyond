(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{164:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[s._v("#")]),s._v(" Installation")]),s._v(" "),a("p",[s._v("Laravel Mailbox can be installed via composer:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("composer require beyondcode/laravel-mailbox\n")])])]),a("p",[s._v("The package will automatically register a service provider.")]),s._v(" "),a("p",[s._v("This package comes with a migration to store all incoming email messages. You can publish the migration file using:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("php artisan vendor:publish --provider"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"BeyondCode\\Mailbox\\MailboxServiceProvider"')]),s._v(" --tag"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"migrations"')]),s._v("\n")])])]),a("p",[s._v("Run the migrations with:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("php artisan migrate\n")])])]),a("p",[s._v("Next, you need to publish the mailbox configuration file:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("php artisan vendor:publish --provider"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"BeyondCode\\Mailbox\\MailboxServiceProvider"')]),s._v(" --tag"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token string"}},[s._v('"config"')]),s._v("\n")])])]),a("p",[s._v("This is the default content of the config file that will be published as  "),a("code",[s._v("config/mailbox.php")]),s._v(":")]),s._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v('/*\n     * The driver to use when listening for incoming emails.\n     * It defaults to the mail driver that you are using.\n     *\n     * Supported drivers: "log", "mailgun", "sendgrid"\n     */')]),s._v("\n    "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'driver'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("env")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'MAILBOX_DRIVER'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'log'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/*\n     * The path for driver specific routes. This is where\n     * you need to point your driver specific callbacks\n     * to.\n     *\n     * For example: /laravel-mailbox/sendgrid/\n     */")]),s._v("\n    "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'path'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'laravel-mailbox'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/*\n     * The amount of days that incoming emails should be stored in your\n     * application. You can use the cleanup artisan command to\n     * delete all older inbound emails on a regular basis.\n     */")]),s._v("\n    "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'store_incoming_emails_for_days'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("7")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/*\n     * By default, this package only stores incoming email messages\n     * when they match one of your mailboxes. To store all incoming\n     * messages, modify this value.\n     */")]),s._v("\n    "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'only_store_matching_emails'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token boolean"}},[s._v("true")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/*\n     * Some services do not have their own authentication methods to\n     * verify the incoming request. For these services, you need\n     * to use this username and password combination for HTTP\n     * basic authentication.\n     *\n     * See the driver specific documentation if it applies to your\n     * driver.\n     */")]),s._v("\n    "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'basic_auth'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'username'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("env")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'MAILBOX_HTTP_USERNAME'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'laravel-mailbox'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'password'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("env")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'MAILBOX_HTTP_PASSWORD'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[s._v("/*\n     * Third party service configuration.\n     */")]),s._v("\n    "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'services'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n\n        "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'mailgun'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n            "),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'key'")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),a("span",{attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{attrs:{class:"token function"}},[s._v("env")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token single-quoted-string string"}},[s._v("'MAILBOX_MAILGUN_KEY'")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])}],!1,null,null,null);e.options.__file="installation.md";t.default=e.exports}}]);